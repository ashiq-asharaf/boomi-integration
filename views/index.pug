extends layout

block content
  h1(style=`text-align: center; margin-top: 0; font-family: 'Inter UI', sans-serif; color: white `)= headerName
  .container(style=`display: flex; justify-content: center; height: 100%; `)
    .right-side(style=`width: 70%; height: 70%; margin: 20px; padding: 20px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); `)
      if users
        h2(style="margin-bottom: 5px; text-align: center; margin-top: 0; color: white;") Users
        button#deleteAllButton(type="button" style="background-color: #ff0000; margin-bottom: 6px; color: white; padding: 10px; border-radius: 5px; border-radius: 4px; cursor: pointer; width: 20%; height: 6%; ") Delete All Data
        button#postAllButton(type="button" style="background-color: #008CBA;margin-left: 10px; margin-bottom: 6px; color: white; padding: 10px; border-radius: 5px; border-radius: 4px; cursor: pointer; width: 20%; height: 6%; ") Transfer Data 
        table(style="width: 100%; border-collapse: collapse;")
          thead(style="background-color: #f2f2f2;")
            tr
              //- th(style="border: 1px solid #dddddd; text-align: left; padding: 8px; font-size: 20px; color: white; background: url(https://jackrugile.com/images/misc/noise-diagonal.png), linear-gradient(#777, #444);") ID
              th(style="border: 1px solid #dddddd; text-align: left; padding: 8px; font-size: 20px; color: white; background: url(https://jackrugile.com/images/misc/noise-diagonal.png), linear-gradient(#777, #444);") User Name
              th(style="border: 1px solid #dddddd; text-align: left; padding: 8px; font-size: 20px; color: white; background: url(https://jackrugile.com/images/misc/noise-diagonal.png), linear-gradient(#777, #444);") First Name
              th(style="border: 1px solid #dddddd; text-align: left; padding: 8px; font-size: 20px; color: white; background: url(https://jackrugile.com/images/misc/noise-diagonal.png), linear-gradient(#777, #444);") Last Name
              th(style="border: 1px solid #dddddd; text-align: left; padding: 8px; font-size: 20px; color: white; background: url(https://jackrugile.com/images/misc/noise-diagonal.png), linear-gradient(#777, #444);") Email
              th(style="border: 1px solid #dddddd; text-align: left; padding: 8px; font-size: 20px; color: white; background: url(https://jackrugile.com/images/misc/noise-diagonal.png), linear-gradient(#777, #444); ") Age
              //- th(style="border: 1px solid #dddddd; text-align: left; padding: 8px;") Transfer Status
          tbody
            each user in users
              tr
                //- td(style="border: 1px solid #dddddd; text-align: left; padding: 8px; font-size: 15px; font-weight: 500; background-color: #EEEEEE;")= user.userId
                td(style="border: 1px solid #dddddd; text-align: left; padding: 8px; font-size: 15px; font-weight: 500; background-color: #EEEEEE;")= user.user_name
                td(style="border: 1px solid #dddddd; text-align: left; padding: 8px; font-size: 15px; font-weight: 500; background-color: #EEEEEE;")= user.first_name
                td(style="border: 1px solid #dddddd; text-align: left; padding: 8px; font-size: 15px; font-weight: 500; background-color: #EEEEEE;")= user.last_name
                td(style="border: 1px solid #dddddd; text-align: left; padding: 8px; font-size: 15px; font-weight: 500; background-color: #EEEEEE;")= user.email
                td(style="border: 1px solid #dddddd; text-align: left; padding: 8px; font-size: 15px; font-weight: 500; background-color: #EEEEEE;")= user.age
                //- td(style="border: 1px solid #dddddd; text-align: left; padding: 8px;")= user.transferStatus || 0
      else
        p(style="text-align: center; color: white;") No user data available

    .left-side(style= `width: 30%; margin: 10px; height: 70%; border-radius: 15px; padding: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); background-image: ${backgroundColor};`)
      h2(style="margin-bottom: 2px; text-align: center; margin-top: 86px; font-size: 30px; color: white; ") User
      form(action="/submit" method="post")
        //- .form-group(style="font-size: 20px;")
          //- label(for="userId") User ID:
          //- input(type="text" name="userId" id="userId" placeholder="User" required style="width: 100%; padding: 8px; box-sizing: border-box;")

          //- input(type="text" name="userId" id="userId" placeholder="User" required style=`border: 0; outline: none; display: block; 	box-shadow: none; height: 30px; line-height: 30px; padding: 8px 15px;  border-bottom: 1px solid #eee; width: 90%; font-size: 12px; background-image: ${backgroundColor};`)
          
          
        .form-group(style=" font-size: 20px;")
          //- label(for="userName") User Name:
          input(type="text" name="userName" id="userName" placeholder="userName" required style=`border: 0; outline: none; display: block; 	box-shadow: none; height: 30px; line-height: 30px; padding: 8px 15px;  border-bottom: 1px solid #eee; width: 90%; font-size: 12px; background-image: ${backgroundColor};`)
        .form-group(style=" font-size: 20px;")
          //- label(for="firstName") First Name:
          input(type="text" name="firstName" id="firstName" placeholder="firstName" required style=`border: 0; outline: none; display: block; 	box-shadow: none; height: 30px; line-height: 30px; padding: 8px 15px;  border-bottom: 1px solid #eee; width: 90%; font-size: 12px; background-image: ${backgroundColor};`)
        .form-group(style=" font-size: 20px;")
          //- label(for="lastName") Last Name:
          input(type="text" name="lastName" id="lastName" placeholder="lastName" required style=`border: 0; outline: none; display: block; 	box-shadow: none; height: 30px; line-height: 30px; padding: 8px 15px;  border-bottom: 1px solid #eee; width: 90%; font-size: 12px; background-image: ${backgroundColor};`)
        .form-group(style=" font-size: 20px;")
          //- label(for="email") Email:
          input(type="email" name="email" id="email" placeholder="email" required style=`border: 0; outline: none; display: block; 	box-shadow: none; height: 30px; line-height: 30px; padding: 8px 15px;  border-bottom: 1px solid #eee; width: 90%; font-size: 12px; background-image: ${backgroundColor};`)
        .form-group(style=" font-size: 20px;")
          //- label(for="age") Age:
          input(type="number" name="age" id="age" placeholder="age" required style=`border: 0; outline: none; display: block; 	box-shadow: none; height: 30px; line-height: 30px; padding: 8px 15px; border-bottom: 1px solid #eee; width: 90%; font-size: 12px;background-image: ${backgroundColor};` )
        button(type="submit" id="submit" style="background-color: #4CAF50; color: white; padding: 10px; border: none; border-radius: 15px; cursor: pointer; width: 98%; font-weight: bold;") Add User
          
        
      script.
        document.addEventListener('DOMContentLoaded', () => {
          const deleteAllButton = document.getElementById('deleteAllButton');

          if (deleteAllButton) {
            deleteAllButton.addEventListener('click', async () => {
              try {
                const response = await fetch('/delete-all', {
                  method: 'DELETE',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                });

                if (response.ok) {
                  alert('All user data deleted successfully.');
                  location.reload();
                  // Optionally, you can reload the page or update the UI as needed
                } else {
                  console.error('Failed to delete user data:', response.statusText);
                  alert('Error deleting user data. Please try again.');
                }
              } catch (error) {
                console.error('Error deleting user data:', error);
                alert('Error deleting user data. Please try again.');
              }
            });
          }
        });

  script.
    document.addEventListener('DOMContentLoaded', () => {
      const executeBoomiButton = document.getElementById('postAllButton');

      if (executeBoomiButton) {
        executeBoomiButton.addEventListener('click', async () => {
          try {
            const response = await fetch('/executeBoomiProcess', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                // Add any payload data you need to send
              }),
            });

            if (response.ok) {
              const responseData = await response.json();
              console.log(responseData);
              // Handle the response as needed
            } else {
              console.error('Failed to execute Boomi process:', response.statusText);
              // Handle the error as needed
            }
          } catch (error) {
            console.error('Error executing Boomi process:', error);
            // Handle the error as needed
          }
        });
      }
    });

  //- Add footer content here
  footer(style="text-align: center; margin-top: 120px; color: white; font-size: 15px") Version 0.1


        



      

